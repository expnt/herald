name: Prepare Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - release-test
    types: [closed]

jobs:
  check-version:
    name: Check Commitizen Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Commitizen
        run: npm install -g commitizen

      - id: version
        name: Get version
        run: |
          VERSION=$(cz version -p)
          echo "Version from commitizen: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  prepare-release-pr:
    name: Create Release Branch and PR
    needs: check-version
    if: ${{ needs.check-version.outputs.version != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Bump version (no push)
        id: cz
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_name: ${{ github.actor }}
          git_email: ${{ github.actor }}@users.noreply.github.com
          push: false

      - name: Create release branch and commit
        run: |
          VERSION=${{ steps.cz.outputs.version }}
          BRANCH_NAME="release-v$VERSION"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "bump: release $VERSION"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Release ${{ steps.cz.outputs.version }}"
          body: "Automated PR for version bump to ${{ steps.cz.outputs.version }}"
          base: main
          branch: "release-v${{ steps.cz.outputs.version }}"
          labels: release

  finalize-release:
    name: Finalize Release
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'release-v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from cz
        id: version
        run: |
          VERSION=$(cz version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Tag and Push
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "Release v${{ steps.version.outputs.version }}"
          body_path: "Changelog.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    name: Build and Push Docker
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
    needs: finalize-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/herald:v${{ needs.finalize-release.outputs.version }}

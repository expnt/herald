name: Release Management

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - release-test
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: main
  cancel-in-progress: true

jobs:
  bump-version:
    if: "${{ !startsWith(github.event.head_commit.message, 'bump:') }}"
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    outputs:
      version: ${{ steps.cz.outputs.version }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"
      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"


  create-release:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        if: github.ref == 'refs/pull' || github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.bump-version.outputs.version }}${{ github.ref != 'refs/heads/main' && '-test' || '' }}
          release_name: Release ${{ needs.bump-version.outputs.version }}${{ github.ref != 'refs/heads/main' && ' (Test)' || '' }}
          body: |
            Changelog for version ${{ needs.bump-version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    needs: [bump-version, create-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ghcr.io/${{ github.repository_owner }}/herald:${{ needs.bump-version.outputs.version }}
          push: true

  delete-test-releases:
    if: github.event.pull_request.merged == true && github.base_ref == 'release-test'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Test Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          releases=$(gh api repos/${{ github.repository_owner }}/herald/releases --paginate)
          echo "$releases" | jq '.[] | select(.tag_name | contains("-test")) | .id' | while read release_id; do
            gh api --method DELETE "repos/${{ github.repository_owner }}/herald/releases/$release_id"
          done

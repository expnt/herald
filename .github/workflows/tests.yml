name: test suite
run-name: test suite for ${{ github.event.pull_request.title || github.ref }}
on:
  workflow_dispatch:
    inputs:
      tmate_enabled:
        type: boolean
        description: |
          Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate).
          This disables all but the test-full jobs.
        required: false
        default: false
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            full:
              - '.github/workflows/tests.yml'
              - 'src/**'
              - 'tests/**'
              - 'examples/**'
    outputs:
      full: ${{ steps.filter.outputs.full }}

  pre-commit:
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      # - uses: metatypedev/setup-ghjk@318209a9d215f70716a4ac89dbeb9653a2deb8bc
      - name: Install tofu
        run: |
          curl --proto '=https' --tlsv1.2 -fsSL https://get.opentofu.org/install-opentofu.sh -o install-opentofu.sh
          chmod +x install-opentofu.sh
          ./install-opentofu.sh --install-method deb
          rm -f install-opentofu.sh
      - shell: bash
        run: |
          curl -fsSL https://deno.land/install.sh | sh -s v2.1.4
          export DENO_INSTALL="$HOME/.deno"
          export PATH="$DENO_INSTALL/bin:$PATH"
          # ghjk p resolve
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit install
          deno --version
          pre-commit run --all-files
          # SKIP=ghjk-resolve pre-commit run --show-diff-on-failure --color=always --all-files

  build-docker:
    needs: changes
    if: ${{ needs.changes.outputs.full == 'true' && !(github.event_name == 'workflow_dispatch' && inputs.tmate_enabled) && github.event.pull_request.draft == false  }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Sanitize Docker tag
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            REF="${{ github.head_ref }}"
          else
            REF="latest"
          fi
          echo "TAG=$(echo "$REF" | tr '/' '-')" >> $GITHUB_ENV
      - name: Build and push herald
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/herald:${{ env.TAG }}

  load-herald-yaml:
    name: load herald.yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: load herald.yaml file
        run: rm -rf herald.yaml
          echo "${{ secrets.HERALD_CONFIG }}" > herald.yaml

  test-full:
    needs: [changes]
    if: ${{ needs.changes.outputs.full == 'true' && !(github.event_name == 'workflow_dispatch' && inputs.tmate_enabled) && github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install ghjk
        run: curl -fsSL "https://raw.github.com/metatypedev/ghjk/v0.3.0/install.sh" | bash
      # - name: create /home/runner/.local/bin
      #   run: mkdir -p /home/runner/.local/bin
      # - uses: metatypedev/setup-ghjk@318209a9d215f70716a4ac89dbeb9653a2deb8bc
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install tofu
        run: |
          curl --proto '=https' --tlsv1.2 -fsSL https://get.opentofu.org/install-opentofu.sh -o install-opentofu.sh
          chmod +x install-opentofu.sh
          ./install-opentofu.sh --install-method deb
          rm -f install-opentofu.sh
      - shell: bash
        env:
          AUTH_TYPE: "none"
          LOG_LEVEL: "DEBUG"
          ENV: "DEV"
        run: |
          curl -fsSL https://deno.land/install.sh | sh -s v2.1.4
          export DENO_INSTALL="$HOME/.deno"
          export PATH="$DENO_INSTALL/bin:$PATH"
          ghjk x dev-compose up
          # ghjk x setup-auth
          deno run -A --unstable-kv src/main.ts
      - name: run all tests
        run: deno test
